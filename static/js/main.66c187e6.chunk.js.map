{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api/api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","props","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","request","url","myKey","title","a","fetch","response","json","getMovie","FindMovie","addMovie","useState","setMovie","setTitle","titleError","setTitleError","changeTitle","useCallback","event","target","value","findMovie","trim","newMovie","Response","onAddMovie","preventDefault","onSubmit","htmlFor","type","id","placeholder","onChange","onClick","App","setMoives","addMovieFromAPI","some","alert","ReactDOM","render","document","getElementById"],"mappings":"8TAOaA,EAA6B,SAACC,GACzC,IAAQC,EAAUD,EAAVC,MAER,OACE,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACEC,IAAKF,EAAMG,OACXC,IAAI,kBAIV,sBAAKH,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJE,IAAI,aAIV,qBAAKH,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAb,SAA2BD,EAAMK,aAIrC,sBAAKJ,UAAU,UAAf,UACGD,EAAMM,KACP,iCC7BGC,EAA8B,SAACR,GAC1C,IAAQS,EAAWT,EAAXS,OAER,OACE,qBAAKP,UAAU,SAAf,SACGO,EAAOC,KAAI,SAAAT,GAAK,OACf,cAAC,EAAD,CAEEA,MAAOA,GADFA,EAAMU,c,uBCZfC,G,MAAO,uCAAG,WAAOC,EAAaC,EAAeC,GAAnC,eAAAC,EAAA,sEACSC,MAAM,GAAD,OAAIJ,GAAJ,OAAUC,EAAV,cAAqBC,IADnC,cACRG,EADQ,yBAGPA,EAASC,QAHF,2CAAH,2DAMAC,EAAW,SAACL,GAAD,OAAmBH,EAT1B,kCACF,WAQsDG,ICMxDM,EAA6B,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC3C,EAA0BC,mBAAuB,MAAjD,mBAAOtB,EAAP,KAAcuB,EAAd,KACA,EAA0BD,mBAAS,IAAnC,mBAAOR,EAAP,KAAcU,EAAd,KACA,EAAoCF,mBAAS,IAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KAEMC,EAAcC,uBAAY,SAACC,GAC/BL,EAASK,EAAMC,OAAOC,OACtBL,EAAc,MACb,IAEGM,EAAYJ,uBAAY,WAC5B,GAAKd,EAAMmB,OAEJ,CACL,IAAMC,EAAQ,uCAAG,4BAAAnB,EAAA,sEACQI,EAASL,GADjB,OAGW,UAFpBG,EADS,QAGFkB,UACXZ,EAASN,GACTS,EAAc,KAEdA,EAAc,2CAPD,2CAAH,qDAWdQ,SAbAR,EAAc,0BAef,CAACZ,IAEEsB,EAAaR,uBAAY,SAACC,GAC9BA,EAAMQ,kBAEDZ,GAAczB,IACjBqB,EAASrB,GACTuB,EAAS,MACTC,EAAS,OAEV,CAACxB,EAAOyB,IAEX,OACE,qCACE,uBAAMxB,UAAU,aAAaqC,SAAUF,EAAvC,UACE,sBAAKnC,UAAU,QAAf,UACE,uBAAOA,UAAU,QAAQsC,QAAQ,cAAjC,yBAIA,qBAAKtC,UAAU,UAAf,SACE,uBACEuC,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZX,MAAOjB,EACP6B,SAAUhB,EACV1B,UAAU,sBAIbwB,GACC,mBAAGxB,UAAU,iBAAb,SACGwB,OAKP,sBAAKxB,UAAU,mBAAf,UACE,qBAAKA,UAAU,UAAf,SACE,wBACEuC,KAAK,SACLvC,UAAU,kBACV2C,QAASZ,EAHX,4BASF,qBAAK/B,UAAU,UAAf,SACE,wBACEuC,KAAK,SACLvC,UAAU,oBAFZ,qCAULD,GACC,sBAAKC,UAAU,YAAf,UACE,oBAAIA,UAAU,QAAd,qBACA,cAAC,EAAD,CAAWD,MAAOA,WCpGf6C,EAAgB,WAC3B,MAA4BvB,mBAAkB,IAA9C,mBAAOd,EAAP,KAAesC,EAAf,KAEMC,EAAkBnB,uBAAY,SAACM,GAC9B1B,EAAOwC,MAAK,SAAAhD,GAAK,OAAIA,EAAMU,SAAWwB,EAASxB,UAIlDuC,MAAM,iDAHNH,EAAU,GAAD,mBAAKtC,GAAL,CAAa0B,OAKvB,CAAC1B,IAEJ,OACE,sBAAKP,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACGO,GAAU,cAAC,EAAD,CAAYA,OAAQA,MAFnC,QAKE,qBAAKP,UAAU,UAAf,SACE,cAAC,EAAD,CAAWoB,SAAU0B,UCpB7BG,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.66c187e6.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const { movie } = props;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = (props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","const BASE_URL = 'http://www.omdbapi.com/?apikey=';\nconst MY_KEY = '862ec5ec';\n\nconst request = async (url: string, myKey: string, title: string) => {\n  const response = await fetch(`${url}${myKey}&t=${title}`);\n\n  return response.json();\n};\n\nexport const getMovie = (title: string) => request(BASE_URL, MY_KEY, title);\n","import React, {\n  ChangeEvent,\n  FormEvent,\n  useCallback,\n  useState,\n} from 'react';\nimport './FindMovie.scss';\n\nimport { getMovie } from '../../api/api';\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  addMovie: (movie: Movie) => void;\n};\n\nexport const FindMovie: React.FC<Props> = ({ addMovie }) => {\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [title, setTitle] = useState('');\n  const [titleError, setTitleError] = useState('');\n\n  const changeTitle = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setTitleError('');\n  }, []);\n\n  const findMovie = useCallback(() => {\n    if (!title.trim()) {\n      setTitleError('Please enter a title');\n    } else {\n      const newMovie = async () => {\n        const response = await getMovie(title);\n\n        if (response.Response === 'True') {\n          setMovie(response);\n          setTitleError('');\n        } else {\n          setTitleError('Invalid title, can not find such a film');\n        }\n      };\n\n      newMovie();\n    }\n  }, [title]);\n\n  const onAddMovie = useCallback((event: FormEvent) => {\n    event.preventDefault();\n\n    if (!titleError && movie) {\n      addMovie(movie);\n      setMovie(null);\n      setTitle('');\n    }\n  }, [movie, titleError]);\n\n  return (\n    <>\n      <form className=\"find-movie\" onSubmit={onAddMovie}>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              value={title}\n              onChange={changeTitle}\n              className=\"input is-danger\"\n            />\n          </div>\n\n          {titleError && (\n            <p className=\"help is-danger\">\n              {titleError}\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={findMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"submit\"\n              className=\"button is-primary\"\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import React, { useState, useCallback } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App: React.FC = () => {\n  const [movies, setMoives] = useState<Movie[]>([]);\n\n  const addMovieFromAPI = useCallback((newMovie: Movie) => {\n    if (!movies.some(movie => movie.imdbID === newMovie.imdbID)) {\n      setMoives([...movies, newMovie]);\n    } else {\n      // eslint-disable-next-line no-alert\n      alert('You have already added this movie to the list');\n    }\n  }, [movies]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        {movies && <MoviesList movies={movies} />}\n      </div>\n      Hello\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addMovieFromAPI} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}